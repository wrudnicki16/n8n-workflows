{
  "nodes": [
    {
      "parameters": {
        "content": "## Check if incoming email is about appointment\nWe use LLM to check subject and body of the email and determine if it's an appointment request. ",
        "height": 490,
        "width": 617
      },
      "id": "e47adfbc-e4df-4be0-8f39-efffb293639b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get calendar availability and compose a response\nMake sure to update the Workflow ID if you are running this as 2 workflows",
        "height": 482,
        "width": 796
      },
      "id": "dd6c742f-b7f8-4916-ad56-ada553d3821b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "id": "6d2b224f-50a8-41d8-90af-bd92b4091304",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        80,
        320
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "47b01809-4082-4304-8141-e4f317571e6d",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        620,
        320
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail Trigger').first().json.id }}",
        "message": "={{ $json.output }}",
        "options": {
          "senderName": "Wyatt Rudnicki"
        }
      },
      "id": "818db814-b3d4-41d8-a0f4-fd123de186fb",
      "name": "Send reply",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1080,
        120
      ],
      "webhookId": "0f18d414-1b14-4d2e-9fc2-d2d302372dc6",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "includeSpamTrash": false,
          "readStatus": "unread"
        }
      },
      "id": "674e7437-f1fd-4348-bd6f-017547328094",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        -140,
        140
      ],
      "typeVersion": 1.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\nSubject: {{ $json.Subject }}\nSnippet: {{ $json.snippet }}\nExclude from evaluation if one reply email has already been sent and the sender is wyattrudnicki@gmail.com, as this is a test email.\nExclude emails that contain no-reply or appear from subscription based sites like meetup.com",
        "categories": {
          "categories": [
            {
              "category": "is_appointment",
              "description": "email Is requesting an appointment"
            }
          ]
        },
        "options": {
          "fallback": "discard"
        }
      },
      "id": "c78d15ef-70e8-45d9-98e0-4530a3787d91",
      "name": "Classify appointment",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        80,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sender: {{ $('Gmail Trigger').first().json.From }}\nSubject: {{ $('Gmail Trigger').first().json.Subject }}\nEmail Text: {{ $('Gmail Trigger').first().json.snippet }}",
        "options": {
          "systemMessage": "=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response.\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\nDon't give reasoning in the prompt response as to why I'm scheduling a particular day and time. The person trying to schedule shouldn't know what events are blocking my calendar.\nAlways propose dates between 9am and 5pm PT.\nInclude the following link - https://calendly.com/wyattrudnicki/15min - mention if they can't make the specified time they can check here for my availability.\nAlways end with a newline and \"Best,\" or \"Thanks,\" depending on what seems better, followed by another newline with \"Wyatt\".\nToday date and time is: {{ $now.toISO() }}."
        }
      },
      "id": "1ffad8e7-8f6a-418a-9b19-1666d634412c",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        640,
        120
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "=wyattrudnicki@gmail.com",
          "mode": "id"
        },
        "returnAll": true,
        "timeMin": "={{ $now.minus(1, 'day').toISO() }}",
        "timeMax": "={{ $now.plus(1, 'month').toISO() }}",
        "options": {}
      },
      "id": "df89f870-e072-4ea0-be16-0cd267fd0b41",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        820,
        320
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{ $('Gmail Trigger').first().json.id }}"
      },
      "id": "4344a6a4-ae4c-456d-b2fe-88f440760601",
      "name": "Mark as read",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1080,
        300
      ],
      "webhookId": "7e2d851b-c9f3-471c-875d-0da7c2c3b561",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classify appointment",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Classify appointment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify appointment": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent": {
      "main": [
        [
          {
            "node": "Send reply",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mark as read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bbd13935e8dda0768cb087430cb0e9af56f07646cab0816767a91ba0a50dadc6"
  }
}