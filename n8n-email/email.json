{
  "nodes": [
    {
      "parameters": {
        "content": "## Check if incoming email is about appointment\nWe use LLM to check subject and body of the email and determine if it's an appointment request. ",
        "height": 490,
        "width": 617
      },
      "id": "8d09bc75-32d3-4d25-a7cc-647fe2fecfb2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get calendar availability and compose a response\nMake sure to update the Workflow ID if you are running this as 2 workflows",
        "height": 482,
        "width": 796
      },
      "id": "9d7852ca-7de3-42b6-854d-3ebf93eb3d6c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "e14dcd6f-6473-4664-a0ce-aff62cbff60a",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        100,
        360
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "ZMDYxqL5TywfBfmx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "a0f15160-adf4-4307-a587-9923e8de0e1c",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        640,
        360
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "ZMDYxqL5TywfBfmx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail Trigger').first().json.id }}",
        "message": "={{ $json.output }}",
        "options": {
          "senderName": "Wyatt Rudnicki"
        }
      },
      "id": "572c9e06-36e9-4a1a-840f-585c426ef2e4",
      "name": "Send reply",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1100,
        160
      ],
      "webhookId": "0f18d414-1b14-4d2e-9fc2-d2d302372dc6",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "qW4DT5kS1cCARCrH",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "includeSpamTrash": false,
          "readStatus": "unread"
        }
      },
      "id": "657ffe5a-00b5-42d8-9647-4b568cea0ee7",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        -120,
        180
      ],
      "typeVersion": 1.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "qW4DT5kS1cCARCrH",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\nSubject: {{ $json.Subject }}\nSnippet: {{ $json.snippet }}",
        "categories": {
          "categories": [
            {
              "category": "is_appointment",
              "description": "email Is requesting an appointment"
            }
          ]
        },
        "options": {
          "fallback": "discard"
        }
      },
      "id": "449dce9b-0e62-4847-98d7-235ca221ada4",
      "name": "Classify appointment",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        100,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sender: {{ $('Gmail Trigger').first().json.From }}\nSubject: {{ $('Gmail Trigger').first().json.Subject }}\nEmail Text: {{ $('Gmail Trigger').first().json.snippet }}",
        "options": {
          "systemMessage": "=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response.\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\nDon't give reasoning in the prompt response as to why I'm scheduling a particular day and time. The person trying to schedule shouldn't know what events are blocking my calendar.\nAlways propose dates between 9am and 5pm PT.\nInclude the following link - https://calendly.com/wyattrudnicki/15min - mention if they can't make the specified time they can check here for my availability.\nAlways end with a newline and \"Best,\" or \"Thanks,\" depending on what seems better, followed by another newline with \"Wyatt\".\nToday date and time is: {{ $now.toISO() }}."
        }
      },
      "id": "aafd4d73-948a-4cd0-830d-575f04433310",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        660,
        160
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "=wyattrudnicki@gmail.com",
          "mode": "id"
        },
        "returnAll": true,
        "timeMin": "={{ $now.minus(1, 'day').toISO() }}",
        "timeMax": "={{ $now.plus(1, 'month').toISO() }}",
        "options": {}
      },
      "id": "ccdbde2d-f45d-46cb-bdfd-db21b668990c",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        840,
        360
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hvVsYbWR62yRzayq",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{ $('Gmail Trigger').first().json.id }}"
      },
      "id": "511cb8f3-276c-475c-aeb8-bea948a0252e",
      "name": "Mark as read",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1100,
        340
      ],
      "webhookId": "7e2d851b-c9f3-471c-875d-0da7c2c3b561",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "qW4DT5kS1cCARCrH",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classify appointment",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Classify appointment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify appointment": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent": {
      "main": [
        [
          {
            "node": "Send reply",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mark as read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "815880a4dcd128e81b04317454bb4a1905e8375debc72d7d05897bcf499c8ba3"
  }
}